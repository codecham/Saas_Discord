// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ma/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  
  // Identité Discord
  discordId     String   @unique  // ID Discord (source de vérité)
  username      String              // Username Discord
  discriminator String?             // Discriminator (#0000) - peut être null maintenant
  globalName    String?             // Display name Discord
  avatar        String?             // Avatar hash Discord
  email         String?             // Email Discord (peut être null)
  
  // Tokens Discord (chiffrés)
  accessToken       String         // Token d'accès chiffré
  refreshToken      String         // Token de refresh chiffré
  tokenExpiresAt    DateTime       // Expiration du token
  tokenScope        String         // Scopes accordés (ex: "identify guilds email")
  
  // Métadonnées app
  isActive  Boolean  @default(true)
  role      Role     @default(USER)
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLoginAt DateTime @default(now())
  
  // Relations
  refreshTokens RefreshToken[]  // Tes JWT refresh tokens
  
  @@map("users")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("refresh_tokens")
}

model Guild {
  id             String  @id @default(cuid())
  guildId        String  @unique @map("discord_guild_id")
  name           String
  icon           String?
  ownerDiscordId String  @map("owner_discord_id")
  
  // Status
  botAddedAt DateTime @default(now()) @map("bot_added_at")
  isActive   Boolean  @default(true) @map("is_active")
  
  // Métadonnées
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations (à ajouter plus tard)
  // members         DiscordMember[]
  // channels        DiscordChannel[]
  // events          BotEvent[]
  @@map("guilds")
}


enum Role {
  USER
  ADMIN
  MODERATOR
}
